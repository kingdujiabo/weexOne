<template>
    <div>
      <nav-bar-normal showitem="true"></nav-bar-normal>
      <div class="">
        <div class="carouse-title">
          <text class="carouse-text">{{title}}</text>
        </div>
        <list class="list">
          <cell class="row" repeat="{{readingList}}" index="{{$index}}">
            <div class="" if="{{showstype1}}" cid="{{item_id}}" onclick="onReadCellClick">
              <div class="item-text">
                  <text class="text-title">{{title}}</text>
                  <text class="text-author">作者／{{author}}</text>
                  <text class="text-content-short">{{introduction}}</text>
              </div>
            </div>
            <div class="row" if="{{showstype2}}" cid="{{item_id}}" onclick="onSerialCellClick">
              <div class="item-text">
                  <text class="text-title">{{title}}</text>
                  <text class="text-author">作者／{{author}}</text>
                  <text class="text-content-short">{{introduction}}</text>
              </div>
            </div>
            <div class="row" if="{{showstype3}}" cid="{{item_id}}" onclick="onQuestionCellClick">
              <div class="item-text">
                  <text class="text-title">{{title}}</text>
                  <text class="text-author">作者／{{author}}</text>
                  <text class="text-content-short">{{introduction}}</text>
              </div>
            </div>
          </cell>
        </list>
      </div>
    </div>
</template>
<script>
  require('weex-components');
  var modal = require('@weex-module/modal');
  var apis = require('../common/api');
  var navigator = require('@weex-module/navigator');
  module.exports = {
    data: {
      baseURL: '',
      title: '',
      readingList: [],

    },
    created: function () {
      var self = this;
      var url = self.$getConfig().bundleUrl;
      var baseURL = apis.getBaseUrl(url,true);
      this.baseURL = baseURL;
      var contentId = self.getParameterByName('id', url);  //获取id好去跳转使用
      if (contentId.lastIndexOf('?') != -1) {
          contentId = contentId.substr(0, contentId.lastIndexOf('?'));
      };
      self.title = self.getParameterByName('title', url);       // 获取title
      if(self.title.lastIndexOf('?') != -1) {
        self.title = self.title.substr(0, self.title.lastIndexOf('?'))
      };
      apis.getCarouseList(contentId, function (ret) {
        ret.data.filter((item) => {
          console.log(item)
            item.showstype1 = item.type === "1";
            item.showstype2 = item.type === "2";
            item.showstype3 = item.type === "3";
            self.readingList.push(item)
        })
      })

      console.log(baseURL)
    },
    methods: {
      getParameterByName: function (name, url) {
          name = name.replace(/[\[\]]/g, "\\$&");
          var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                  results = regex.exec(url);
          if (!results) return null;
          if (!results[2]) return '';
          return decodeURIComponent(results[2].replace(/\+/g, " "));
      },
      //type1
      onReadCellClick: function (e) {
        var self = this;
        var itemid = e.target.attr.cid;
        // console.log(itemid)
        this.openEssayDetail(itemid)
      },

      openEssayDetail: function (itemid) {
        var vm = this;
        console.log(this.baseURL)
        var params = {
          'url': this.baseURL + 'modules/essay-detail.js?id=' + itemid,
          'animated': 'true'
        };
        navigator.push(params, function (e) {

        })
      },
      //type2
      onSerialCellClick: function (e) {
        var self = this;
        var itemid = e.target.attr.cid;
        this.openSerialCeDetail(itemid);
      },

      openSerialCeDetail: function (itemid) {
        var vm = this;
        var params = {
          'url' : this.baseURL + 'modules/serial-detail.js?id=' + itemid,
          'animated' : 'true'
        };
        navigator.push(params, function (e) {

        })
      },

      //type3
      onQuestionCellClick: function (e) {
        var self = this;
        var itemid = e.target.attr.cid;
        this.openQuestionDetail(itemid)
      },

      openQuestionDetail: function (itemid) {
        var vm = this;
        var params = {
          'url' : this.baseURL + 'modules/question-detail.js?id=' + itemid,
          'animated' : 'true'
        };
        navigator.push(params, function (e) {

        })
      }

    }
  }

</script>
<style>
  .carouse-title{
    justify-content: center;
    align-items: center;
    padding-top: 36px;
    padding-bottom: 36px;
  }
  .carouse-text{
    font-size: 40px;
    font-weight: bold;
  }
  .list{
    margin-left: 30px;
    margin-right: 30px;
  }
  .row{
    margin-top: 20px;
    margin-bottom: 20px;
  }
  .text-title{
    font-size: 38px;
    color: #222;
    font-weight: bold;
  }
  .text-author{
    padding-top: 20px;
    padding-bottom: 20px;
  }
</style>
